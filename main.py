import os
import time
import random
from pocketoptionapi.stable_api import PocketOption
from notifier import Notifier

# ====== ุฅุนุฏุงุฏุงุช ูู ุงููุชุบูุฑุงุช ======
TRADE_INTERVAL_MINUTES = int(os.getenv("TRADE_INTERVAL_MINUTES", "30"))
TRADE_AMOUNT = float(os.getenv("TRADE_AMOUNT", "2"))
USE_DEMO = os.getenv("USE_DEMO", "true").lower() == "true"
EMAIL = os.getenv("POCKET_EMAIL")
PASSWORD = os.getenv("POCKET_PASSWORD")

# ====== notifier ููุชููุฌุฑุงู ======
notifier = Notifier()

# ====== ุชุณุฌูู ุงูุฏุฎูู ุฅูู Pocket Option ======
pocket = PocketOption(EMAIL, PASSWORD)
if not pocket.connect():
    notifier.send_text("โ ูุดู ุชุณุฌูู ุงูุฏุฎูู ุฅูู Pocket Option")
    exit(1)

balance = pocket.get_balance()
notifier.send_text(f"โ ุงูุจูุช ุงุดุชุบู ุงูุขู!\n๐ฐ ุงูุฑุตูุฏ ุงูุญุงูู: {balance}")


def get_signal():
    """
    ุฅุดุงุฑุฉ ููููุฉ (ูุงุญููุง ุชุชุบูุฑ ุฅูู ุฐูุงุก ุงุตุทูุงุนู)
    """
    return random.choice(["call", "put", None])


def main_loop():
    while True:
        try:
            signal = get_signal()
            if signal:
                # ูุชุญ ุตููุฉ
                status, order_id = pocket.buy(
                    amount=TRADE_AMOUNT,
                    asset="EURUSD",
                    direction=signal,
                    duration=1  # ุฏูููุฉ ูุงุญุฏุฉ
                )

                # ุฅุดุนุงุฑ ูุจุฏุฆู
                notifier.send_text(
                    f"๐ ุตููุฉ ุฌุฏูุฏุฉ: {signal}\n"
                    f"๐ต ุงููุจูุบ: {TRADE_AMOUNT}\n"
                    f"๐ ุงูุญุงูุฉ: {status}\n"
                    f"๐ ุฑูู ุงูุนูููุฉ: {order_id}"
                )

            # ุงูุงูุชุธุงุฑ ูููุชุฑุฉ ุงููุญุฏุฏุฉ
            time.sleep(TRADE_INTERVAL_MINUTES * 60)

        except Exception as e:
            notifier.send_text(f"โ ุฎุทุฃ: {str(e)}")
            time.sleep(10)  # ุฅุนุงุฏุฉ ุงููุญุงููุฉ ุจุนุฏ 10 ุซูุงูู


if __name__ == "__main__":
    main_loop()
