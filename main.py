import os
import time
from datetime import datetime
from notifier import Notifier

# ุฅุนุฏุงุฏุงุช
TRADE_INTERVAL_MINUTES = int(os.getenv("TRADE_INTERVAL_minutes", "30"))
TRADE_AMOUNT = float(os.getenv("TRADE_AMOUNT", "2"))
USE_DEMO = os.getenv("USE_DEMO", "true").lower() == "true"

# ุฃูุดุฆ notifier
notifier = Notifier()

def get_signal():
    # ุฏุงูุฉ ููููุฉ (ุชุนุฏู ูุงุญููุง ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู)
    import random
    return random.choice(["call", "put", None])

def main_loop():
    while True:
        try:
            signal = get_signal()
            if signal:
                status = "pending"
                # ุชุฑุณู ุฅุดุนุงุฑ ุจุชูููุฐ ุงูุตููุฉ
                notifier.send_text(f"๐ ุฅุดุงุฑุฉ ุฌุฏูุฏุฉ: {signal} | ุงููุจูุบ: {TRADE_AMOUNT} | ุงูุญุงูุฉ: {status}")
            
            # ุชูุชุธุฑ ุงููุชุฑุฉ ุงููุญุฏุฏุฉ
            time.sleep(TRADE_INTERVAL_MINUTES * 60)

        except Exception as e:
            notifier.send_text(f"โ ุฎุทุฃ: {str(e)}")
            time.sleep(10)  # ุฅุนุงุฏุฉ ุงููุญุงููุฉ ุจุนุฏ 10 ุซูุงูู

if __name__ == "__main__":
    # ุฑุณุงูุฉ ุงุฎุชุจุงุฑ ุนูุฏ ุงูุชุดุบูู
    notifier.send_text("โ ุงูุจูุช ุงุดุชุบู ุงูุขู!")
    main_loop()
